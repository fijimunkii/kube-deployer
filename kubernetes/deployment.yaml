apiVersion: v1
kind: Service
metadata:
  name: kube-deployer
  namespace: myapp
spec:
  ports:
  - port: 5555
    protocol: TCP
  selector:
    app: kube-deployer
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-deployer
  namespace: myapp
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
   - hosts:
     - deployer.myapp.clusters.domain.com
     secretName: deployer-tls
  rules:
  - host: deployer.myapp.clusters.domain.com
    http:
      paths:
      - path: /
        backend:
          serviceName: deployer
          servicePort: 5555
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: deployer
  name: deployer
  namespace: myapp
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployer
    spec:
      containers:
      - image: fijimunkii/deployer
        name: flashlight
        ports:
        - containerPort: 5555
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/src/app/config
          subPath: config
          name: config-volume
        - mountPath: /usr/src/app/config.json
          subPath: config.json
          name: config-volume
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
      volumes:
      - name: config-volume
        secret:
          secretName: deployer-config
